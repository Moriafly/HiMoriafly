"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolvePageDate = void 0;
const shared_1 = require("@vuepress/shared");
const utils_1 = require("@vuepress/utils");
const FILENAME_DATE_RE = /^(\d{4})-(\d{1,2})(?:-(\d{1,2}))?-(.*)$/;
const DIRNAME_DATE_RE = /(\d{4})\/(\d{1,2})(?:\/(\d{1,2}))?(\/|$)/;
const DEFAULT_DATE = '0000-00-00';
/**
 * Resolve page date according to frontmatter or file path
 *
 * It will be resolved as 'yyyy-MM-dd' format
 */
const resolvePageDate = ({ frontmatter, filePathRelative, }) => {
    var _a, _b;
    // `frontmatter.date` could be parsed as UTC Date directly
    if (frontmatter.date instanceof Date) {
        return (0, shared_1.formatDateString)([
            frontmatter.date.getUTCFullYear(),
            frontmatter.date.getUTCMonth() + 1,
            frontmatter.date.getUTCDate(),
        ].join('-'), DEFAULT_DATE);
    }
    if ((0, shared_1.isString)(frontmatter.date)) {
        return (0, shared_1.formatDateString)(frontmatter.date, DEFAULT_DATE);
    }
    if (filePathRelative === null) {
        return DEFAULT_DATE;
    }
    const filename = utils_1.path.parse(filePathRelative).name;
    if (filename) {
        const matches = filename.match(FILENAME_DATE_RE);
        if (matches) {
            return (0, shared_1.formatDateString)(`${matches[1]}-${matches[2]}-${(_a = matches[3]) !== null && _a !== void 0 ? _a : '01'}`, DEFAULT_DATE);
        }
    }
    const dirname = utils_1.path.dirname(filePathRelative);
    if (dirname !== '.') {
        const matches = dirname.match(DIRNAME_DATE_RE);
        if (matches) {
            return (0, shared_1.formatDateString)(`${matches[1]}-${matches[2]}-${(_b = matches[3]) !== null && _b !== void 0 ? _b : '01'}`, DEFAULT_DATE);
        }
    }
    return DEFAULT_DATE;
};
exports.resolvePageDate = resolvePageDate;
