import type { App } from './app';
import type { HooksExposed } from './pluginApi';
/**
 * Vuepress plugin
 *
 * A plugin should be rather:
 * - an object (`PluginObject`)
 * - a function that returns an object (`PluginFunction`)
 *
 * A plugin package should have a `Plugin` as the default export
 */
export declare type Plugin<T extends PluginObject = PluginObject> = T | PluginFunction<T>;
/**
 * Vuepress plugin function
 *
 * It accepts plugin options and vuepress app, returns plugin object
 */
export declare type PluginFunction<T extends PluginObject = PluginObject> = (app: App) => T;
/**
 * Vuepress plugin object
 */
export interface PluginObject extends Partial<HooksExposed> {
    name: string;
    multiple?: boolean;
}
/**
 * Config field for plugins
 */
export declare type PluginConfig = (Plugin | Plugin[])[];
