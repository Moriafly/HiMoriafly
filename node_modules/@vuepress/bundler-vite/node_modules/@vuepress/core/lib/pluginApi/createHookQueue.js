"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHookQueue = void 0;
const utils_1 = require("@vuepress/utils");
const log = (0, utils_1.debug)('vuepress:core/plugin-api');
/**
 * Create hook queue for plugin system
 */
const createHookQueue = (name) => {
    const items = [];
    const hookQueue = {
        name,
        items,
        add: (item) => {
            items.push(item);
        },
        process: async (...args) => {
            // store the results of all hook items
            const results = [];
            // process all hook items
            for (const item of items) {
                log(`process ${utils_1.chalk.magenta(name)} from ${utils_1.chalk.magenta(item.pluginName)}`);
                try {
                    // process and get the result of the the hook item
                    // @ts-expect-error: the types could not be narrowed correctly
                    const result = (await item.hook(...args));
                    // push the result to results array
                    if (result !== undefined) {
                        results.push(result);
                    }
                }
                catch (e) {
                    utils_1.logger.error(`error in hook ${utils_1.chalk.magenta(name)} from ${utils_1.chalk.magenta(item.pluginName)}`);
                    throw e;
                }
            }
            return results;
        },
    };
    return hookQueue;
};
exports.createHookQueue = createHookQueue;
