"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assetsPlugin = void 0;
const resolveLink_1 = require("./resolveLink");
/**
 * Plugin to handle assets links
 */
const assetsPlugin = (md, { relativePathPrefix = '@source' } = {}) => {
    // wrap raw image renderer rule
    const rawImageRule = md.renderer.rules.image;
    md.renderer.rules.image = (tokens, idx, options, env, self) => {
        const token = tokens[idx];
        // get the image link
        const link = token.attrGet('src');
        if (link) {
            // replace the original link with resolved link
            token.attrSet('src', (0, resolveLink_1.resolveLink)(link, relativePathPrefix, env));
        }
        return rawImageRule(tokens, idx, options, env, self);
    };
    // wrap raw html renderer rule
    const createHtmlRule = (rawHtmlRule) => (tokens, idx, options, env, self) => {
        // replace the original link with resolved link
        tokens[idx].content = tokens[idx].content.replace(/(<img\b.*?src=")([^"]*)(")/gs, (_, prefix, link, suffix) => `${prefix}${(0, resolveLink_1.resolveLink)(link, relativePathPrefix, env)}${suffix}`);
        return rawHtmlRule(tokens, idx, options, env, self);
    };
    const rawHtmlBlockRule = md.renderer.rules.html_block;
    const rawHtmlInlineRule = md.renderer.rules.html_inline;
    md.renderer.rules.html_block = createHtmlRule(rawHtmlBlockRule);
    md.renderer.rules.html_inline = createHtmlRule(rawHtmlInlineRule);
};
exports.assetsPlugin = assetsPlugin;
