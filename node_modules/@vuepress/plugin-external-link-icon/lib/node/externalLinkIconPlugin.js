"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.externalLinkIconPlugin = void 0;
const utils_1 = require("@vuepress/utils");
const externalLinkIconPlugin = ({ locales = {}, }) => ({
    name: '@vuepress/plugin-external-link-icon',
    define: {
        __EXTERNAL_LINK_ICON_LOCALES__: locales,
    },
    clientAppEnhanceFiles: utils_1.path.resolve(__dirname, '../client/clientAppEnhance.js'),
    extendsMarkdown: (md) => {
        let shouldRenderExternalIcon = false;
        const rawLinkOpenRule = md.renderer.rules.link_open;
        md.renderer.rules.link_open = (tokens, idx, options, env, self) => {
            var _a;
            const result = rawLinkOpenRule(tokens, idx, options, env, self);
            if (((_a = env.frontmatter) === null || _a === void 0 ? void 0 : _a.externalLinkIcon) !== false &&
                tokens[idx].attrGet('target') === '_blank') {
                shouldRenderExternalIcon = true;
            }
            return result;
        };
        const rawLinkCloseRule = md.renderer.rules.link_close;
        md.renderer.rules.link_close = (tokens, idx, options, env, self) => {
            const result = rawLinkCloseRule(tokens, idx, options, env, self);
            // add external link icon before ending tag
            if (shouldRenderExternalIcon) {
                shouldRenderExternalIcon = false;
                return `<ExternalLinkIcon/>${result}`;
            }
            return result;
        };
    },
});
exports.externalLinkIconPlugin = externalLinkIconPlugin;
