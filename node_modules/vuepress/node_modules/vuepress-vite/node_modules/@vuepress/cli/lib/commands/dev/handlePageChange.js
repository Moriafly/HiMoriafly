"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handlePageChange = void 0;
const core_1 = require("@vuepress/core");
/**
 * Event handler for page change event
 */
const handlePageChange = async (app, filePath) => {
    // get page index of the changed file
    const pageIndex = app.pages.findIndex((page) => page.filePath === filePath);
    if (pageIndex === -1) {
        return;
    }
    // get the old page of the changed file
    const oldPage = app.pages[pageIndex];
    // create a new page from the changed file
    const changedPage = await (0, core_1.createPage)(app, {
        filePath,
    });
    // replace the old page
    app.pages.splice(pageIndex, 1, changedPage);
    // prepare page files
    await (0, core_1.preparePageComponent)(app, changedPage);
    await (0, core_1.preparePageData)(app, changedPage);
    const isPathChanged = oldPage.path !== changedPage.path;
    const isTitleChanged = oldPage.title !== changedPage.title;
    // prepare pages entry if the path is changed
    if (isPathChanged) {
        await (0, core_1.preparePagesComponents)(app);
        await (0, core_1.preparePagesData)(app);
    }
    // prepare pages routes if the path or title is changed
    if (isPathChanged || isTitleChanged) {
        await (0, core_1.preparePagesRoutes)(app);
    }
};
exports.handlePageChange = handlePageChange;
