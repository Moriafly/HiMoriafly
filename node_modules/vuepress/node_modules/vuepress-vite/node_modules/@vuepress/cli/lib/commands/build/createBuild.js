"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createBuild = void 0;
const core_1 = require("@vuepress/core");
const utils_1 = require("@vuepress/utils");
const config_1 = require("../../config");
const utils_2 = require("../../utils");
const log = (0, utils_1.debug)('vuepress:cli/build');
const createBuild = (defaultAppConfig) => async (sourceDir = '.', commandOptions = {}) => {
    log(`commandOptions:`, commandOptions);
    if (process.env.NODE_ENV === undefined) {
        process.env.NODE_ENV = 'production';
    }
    // resolve base app config
    const cliAppConfig = (0, utils_2.resolveAppConfigFromCommandOptions)(sourceDir, commandOptions);
    // resolve user config file
    const userConfigPath = commandOptions.config
        ? (0, config_1.resolveUserConfigPath)(commandOptions.config)
        : (0, config_1.resolveUserConfigConventionalPath)(cliAppConfig.source);
    log(`userConfigPath:`, userConfigPath);
    const userConfig = await (0, config_1.loadUserConfig)(userConfigPath);
    // create vuepress app
    const app = (0, core_1.createBuildApp)({
        // allow setting default app config via `cli()`
        // for example, set different default bundler in `vuepress` and `vuepress-vite` package
        ...defaultAppConfig,
        // use cli options to override config file
        ...userConfig,
        ...cliAppConfig,
    });
    // use user-config plugin
    app.use((0, config_1.transformUserConfigToPlugin)(app, userConfig));
    // clean temp and cache
    if (commandOptions.cleanTemp === true) {
        utils_1.logger.info('Cleaning temp...');
        await utils_1.fs.remove(app.dir.temp());
    }
    if (commandOptions.cleanCache === true) {
        utils_1.logger.info('Cleaning cache...');
        await utils_1.fs.remove(app.dir.cache());
    }
    // empty dest directory
    await utils_1.fs.emptyDir(app.dir.dest());
    // initialize and prepare
    utils_1.logger.info('Initializing VuePress and preparing data...');
    await app.init();
    await app.prepare();
    // build
    await app.build();
    // plugin hook: onGenerated
    await app.pluginApi.hooks.onGenerated.process(app);
    utils_1.logger.success('VuePress build successfully!');
};
exports.createBuild = createBuild;
